<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <log4net>
    <!--使用Rolling方式记录日志  
    每个日志文件最大100KB，生成的日志文件名会是log.txt.1,log.txt.2 ...log.txt.10  
     如果记录的日志超过10个，会从log.txt.1开始覆盖  
     -->
    <!--<appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
			<file value="RollingFileAppender_log.txt" />
			<appendToFile value="true" />
			<rollingStyle value="Size" />
			<maxSizeRollBackups value="10" />
			<maximumFileSize value="100KB" />
			<staticLogFileName value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] (%file:%line) %-5level %logger [%property{NDC}] - %message%newline" />
			</layout>
		</appender>-->
    <!--使用Rolling方式记录日志  
     按照日来记录日志  
     -->
    <appender name="RollingLogFileAppender_DateFormat" type="log4net.Appender.RollingFileAppender">
      <!--多线程时采用最小锁定-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!-- 文件存放的位置 -->
      <file value="Log\\Log-" />
      <!--2. 创建新文件的方式，可选为Size（按文件大小），Date（按日期），Once（每启动一次创建一个文件），Composite（按日期及文件大小），默认为Composite-->
      <rollingStyle value="Composite" />
      <!--3. 当RollingStyle为Composite或Date，这里设置文件名格式-->
      <datePattern value="yyyy-MM-dd&quot;.log&quot;" />
      <!--4. true/false，默认为true。为true时，RollingStyler的date值将无效。且为true时，需要在file里指定文件名，所有日志都会记录在这个文件里。-->
      <staticLogFileName value="false" />
      <!--5. 当rollingStyle为Composite或Size，这里设置最大文件大小（可以KB，MB，GB为单位，默认为字节）-->
      <maximumFileSize value="1MB" />
      <!--6. 默认值为-1。当文件超过MaximumFileSize的大小时，如果要创建新的文件来存储日志，会根据CountDirection的值来重命名文件。大于-1的值时，file里指定的文件名会依次加上.0,.1,.2递增。当等于或小于-1时，创建依赖于MaxSizeRollBackups参数值，创建备份日志数。-->
      <countDirection value="-1" />
      <!--7. 备份日志数目，默认为0。在CountDirection为负数时有效。-->
      <maxSizeRollBackups value="10" />
      <!--8. true/false，默认为true。当文件存在时，是否在原文件上追加内容。-->
      <appendToFile value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <!-- 日志起始输出 -->
        <header value="-----------ProgramStart----------- &#xD;&#xA;" />
        <!-- 日志结束输出 -->
        <footer value="-----------ProgramEnd----------- &#xD;&#xA;" />
        <conversionPattern value="%date [%thread] %-5level [%ndc] - %message%newline" />
        <!--<conversionPattern value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 出错类：%logger property:[%property{NDC}] - 错误描述：%message%newline" />-->
      </layout>
    </appender>
    <!--定义日志的输出媒介，下面定义日志以四种方式输出。也可以下面的按照一种类型或其他类型输出。-->
    <root>
      <!-- 记录哪个级别以上的日志:  OFF->FATAL->ERROR->WARN->INFO->DEBUG/ALL -->
      <level value="ALL" />
      <!--文件形式记录日志-->
      <!-- <appender-ref ref="LogFileAppender" />-->
      <!--控制台控制显示日志-->
      <!--<appender-ref ref="ConsoleAppender" /> -->
      <!--Windows事件日志-->
      <!--<appender-ref ref="EventLogAppender" />-->
      <!--SQLite日志-->
      <!--<appender-ref ref="AdoNetAppender_SQLite" />-->
      <!--RollingFileAppender事件日志-->
      <!-- <appender-ref ref="RollingFileAppender" /> -->
      <!--RollingFileAppender事件日志，每天一个日志-->
      <appender-ref ref="RollingLogFileAppender_DateFormat" />
      <!-- 如果不启用相应的日志记录，可以通过这种方式注释掉  <appender-ref ref="AdoNetAppender_Access" /> -->
    </root>
  </log4net>
</configuration>