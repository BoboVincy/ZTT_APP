<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
                    xmlns:primitives="clr-namespace:System.Windows.Controls.Primitives;assembly=PresentationFramework"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:ZUI="clr-namespace:ZdfFlatUI">

    <Color x:Key="MainColor">#FFB9D1EA</Color>
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#FFE6F4FF" />
    <SolidColorBrush x:Key="NormalBrush" Color="{StaticResource MainColor}" />
    <!-- DataGridRow -->
    <Style x:Key="MyDataGridRow" TargetType="{x:Type controls:DataGridRow}">
        <Setter Property="Height" Value="28"/>
        <Setter Property="Margin" Value="0,5,0,0"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Background" Value="LightGray">
                </Setter>
            </Trigger>
            <Trigger Property="IsSelected" Value="True" >
                <Setter Property="Background" Value="DarkGray">
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--DataGridCell-->
    <Style x:Key="myDataGridCell" TargetType="{x:Type controls:DataGridCell}" >
        <!--<Setter Property="Foreground" Value="#6D6E70" />-->
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="FontSize" Value="10" />
        <!--<Setter Property="Height" Value="120"></Setter>-->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="IsTabStop" Value="False" />
        <!--<Setter Property="BorderThickness" Value="1" />-->
        <!--Padding hack-->
        <Setter Property="Padding" Value="2 5 2 5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DataGridCell}">
                    <Grid x:Name="Root" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Cursor="{TemplateBinding Cursor}"/>
                        <Rectangle x:Name="RightGridLine" VerticalAlignment="Stretch" Width="1" Grid.Column="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!--DataGridColumnHeader-->
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="1"/>
        <Setter Property="Margin" Value="0,1,0,0"></Setter>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="myDataGridColumnHeader"  TargetType='{x:Type primitives:DataGridColumnHeader}'>
        <!--<Setter Property="Foreground" Value="#6E6E6E" />-->
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Padding" Value="5,0,5,0"></Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type primitives:DataGridColumnHeader}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"></RowDefinition>
                            <RowDefinition Height="10"></RowDefinition>
                        </Grid.RowDefinitions>
                        <themes:DataGridHeaderBorder x:Name='HeaderBorder' 
                                                     HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                     VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                  SortDirection="{TemplateBinding SortDirection}"
                                                  IsHovered="{TemplateBinding IsMouseOver}"
                                                  IsPressed="{TemplateBinding IsPressed}"
                                                  IsClickable="{TemplateBinding CanUserSort}"
                                                  Background="Transparent"
                                                  SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                                >
                            <Grid Background='Transparent' >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width='Auto' />
                                    <ColumnDefinition Width='*' />
                                </Grid.ColumnDefinitions>
                                <!--<Rectangle x:Name="BackgroundRectangle" Grid.ColumnSpan="2" Grid.RowSpan="2" 
                                   Fill="#FFE0E0E0" Stretch="Fill">
                                </Rectangle>-->
                                <Rectangle x:Name="HoverRectangle" Grid.ColumnSpan="2" Grid.RowSpan="2" Opacity="0" />
                                <ContentPresenter Grid.Column='1' 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin='{TemplateBinding Padding}' 
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  />
                                <!--<Rectangle x:Name="ShineRectangle" Fill="{StaticResource ShineBrush}" Stretch="Fill" 
                                   Stroke="{StaticResource NormalBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" Grid.RowSpan="2" />
                                <Rectangle x:Name="VerticalSeparator" VerticalAlignment="Stretch" Width="1" Visibility="{TemplateBinding SeparatorVisibility}" 
                                   Grid.Column="2" Grid.RowSpan="2" Fill="{TemplateBinding SeparatorBrush}" />-->

                            </Grid>
                        </themes:DataGridHeaderBorder>
                        <Thumb x:Name="PART_LeftHeaderGripper"
                   HorizontalAlignment="Left"
                   Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper"
                   HorizontalAlignment="Right"
                   Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <!--标题栏下划线-->
                        <Border Grid.Row="1" VerticalAlignment="Center" BorderBrush="Black" BorderThickness="0,0,0,1"></Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <!--<Setter TargetName="SortArrow" Property="Opacity" Value="1" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>-->
                            <!--<Setter TargetName="ShineRectangle" Property="Opacity" Value="1" />-->
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <!--<Setter TargetName="SortArrow" Property="Opacity" Value="1" />-->
                            <!--<Setter TargetName="ShineRectangle" Property="Opacity" Value="1" />-->
                        </Trigger>
                        <Trigger Property='IsMouseOver' Value='True'>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00" 
                                                         Duration="00:00:00.20000"
                                                         Storyboard.TargetName="HoverRectangle" 
                                                         Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                         To='1.0'                                                         
                                                         />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00" 
                                                         Duration="00:00:00.20000"
                                                         Storyboard.TargetName="HoverRectangle" 
                                                         Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                         To='0'                                                         
                                                         />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--DataGrid -->
    <Style TargetType='{x:Type ZUI:ZDataGrid}'>
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property='ScrollViewer.CanContentScroll' Value='True' />
        <Setter Property='AutoGenerateColumns' Value='False' />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="RowBackground" Value="Transparent" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="AlternatingRowBackground" Value="#00FFFFFF" />
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="HorizontalGridLinesBrush" Value="#FFC9CACA" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="HeadersVisibility" Value="Column"></Setter>
        <Setter Property="VerticalGridLinesBrush" Value="#FFC9CACA" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="CanUserAddRows" Value='False' />
        <Setter Property='CanUserSortColumns' Value='True' />
        <Setter Property="IsReadOnly" Value="False"></Setter>
        <Setter Property='CanUserResizeRows' Value='False' />
        <Setter Property='IsSynchronizedWithCurrentItem' Value='True'/>
        <Setter Property="EnableRowVirtualization" Value="True" />
        <Setter Property='RowDetailsVisibilityMode' Value='VisibleWhenSelected' />
        <Setter Property='FontFamily' Value='Verdana' />
        <Setter Property='FontSize' Value='16' />
        <Setter Property="RowStyle" Value="{StaticResource MyDataGridRow}"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource myDataGridColumnHeader}"/>
        <Setter Property="CellStyle" Value="{StaticResource myDataGridCell}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ZUI:ZDataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CornerRadius="5" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical"  Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridHeaderLeft" TargetType="DataGridColumnHeader" BasedOn="{StaticResource myDataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    </Style>

    <Style x:Key="DataGridContentLeft" TargetType="DataGridCell" BasedOn="{StaticResource myDataGridCell}">
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    </Style>


</ResourceDictionary>